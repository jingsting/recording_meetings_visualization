Level 1 Visualization
	1. Place people in a circle with correct number of people
		currently number is set, will need to be able to read number of people from the json file
		need to consider the number of people in the meeting to determine radius because we don’t want overlapping nodes if there are too many of them
		also need to consider people joining the meeting after the meeting has started
			if the number of people in the meeting is in each object, the number of nodes on the screen can also be updated
				need to make sure it keeps previous characteristics and does not restart when a new person joins
		the 3D coordinates for each person is given in the json file so will need to flatten this in some way since the visualization is in 2D
	2. Be able to change the size of the bubbles based on the amount of time someone speaks
		have to calculate from the json? —> start and end times are given in json so can calculate the amount of time someone speaks in seconds and change the size of the bubbles proportionally
			need to figure out a good scale to use to increase the sizes of the nodes
				can't figure out how to save the previous size to a variable then increase the variable --> cannot figure out how to increase size from the previous size
		also have to consider rescaling entire visualization if one becomes too big
	3. Be able to change the colors in a scalar way from light to dark based on the number of times the person talks
		d3 provides different color scales which can be used for the color scale
			need to figure out how to implement this color scale
	4. Be able to place people with IDs attached using mic array coordinates and update in live time
		need to flatten coordinates since the visualization is in 2D
			need to figure out how to tag each node with respective IDs and update the correct node based on ID
	5. Be able to tell who is currently talking from the json
		not sure if this is possible due to the fact that it may not write to the json file until the person has finished talking due to the transcript
	6. Be able to highlight the person that just finished talking
		should be easy with the json data if it shows after the person has finished their transcript
	7. Be able to show the transcript of the person that has just spoke
		should be easy with transcript data from the json
			how accurate will the transcript be right after someone has finished speaking?
		trying to contain the transcript in a shape
			trying to place the transcript box in different places for different people speaking
	8. Add mouseover function to get more quantitative information from each circle
		mouseover function previously used in last visualization and there are many examples of mouseover fucntions so should not be too difficult to implement
	9. Add timeline functionality so people are able to go back in time in the meeting
			Examples:
			https://github.com/commodityvectors/d3-timeline
			https://github.com/marmelab/EventDrops
			http://romsson.github.io/dragit/example/nations.html --> Leaning in this direction
